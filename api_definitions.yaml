swagger: '2.0'
info:
  title: My Blog API
  description: RESTful API for managing blogs and users
  version: '1.0'
host: localhost:8080
basePath: /api/v1
schemes:
  - http

paths:
  /api/export_csv:
    post:
      summary: Export blogs as CSVs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
              example:
                - id: 1
                  title: "First blog"
                  caption: "This is my first blog"
                  image_url: "http://example.com/image.jpg"
                - id: 2
                  title: "Second blog"
                  caption: "This is my second blog"
                  image_url: "http://example.com/image2.jpg"
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
      tags:
        - Blogs
  /user:
    get:
      summary: Get current user details
      responses:
        200:
          description: User details
          schema:
            type: object
            properties:
              id:
                type: integer
              username:
                type: string
              email:
                type: string
              role:
                type: string
              blogs:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    caption:
                      type: string
                    image_url:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
    post:
      summary: Search for users
      parameters:
        - name: search
          in: query
          description: Search term for user name
          required: true
          type: string
      responses:
        200:
          description: List of users matching the search term
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
                    role:
                      type: string

  /user/{user_id}/follow:
    post:
      summary: Follow a user
      parameters:
        - name: user_id
          in: path
          description: ID of the user to follow
          required: true
          type: integer
      responses:
        200:
          description: Success message
          schema:
            type: object
            properties:
              message:
                type: string

  /user/{user_id}/unfollow:
    post:
      summary: Unfollow a user
      parameters:
        - name: user_id
          in: path
          description: ID of the user to unfollow
          required: true
          type: integer
      responses:
        200:
          description: Success message
          schema:
            type: object
            properties:
              message:
                type: string

  /blogs:
    get:
      summary: Get blogs of the current user and their followers
      parameters:
        - name: user_id
          in: query
          description: ID of the user to get blogs for
          required: true
          type: integer
      responses:
        200:
          description: List of blogs
          schema:
            type: object
            properties:
              blogs:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    caption:
                      type: string
                    image_url:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
    put:
      summary: Update a blog
      description: Update the specified blog with the provided data.
      parameters:
        - name: blog_id
          in: path
          description: The ID of the blog to be updated.
          required: true
          schema:
            type: integer
      requestBody:
        description: The data to update the blog with.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The new title of the blog.
                caption:
                  type: string
                  description: The new caption of the blog.
                image_url:
                  type: string
                  description: The new image URL of the blog.
      responses:
        200:
          description: The blog was successfully updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the blog was updated successfully.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete a blog
      description: Deletes the specified blog.
      parameters:
        - name: blog_id
          in: path
          description: The ID of the blog to be deleted.
          required: true
          schema:
            type: integer
      responses:
        200:
          description: The blog was successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the blog was deleted successfully.
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/InternalServerError'

        